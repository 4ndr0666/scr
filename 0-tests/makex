#!/bin/bash
# Author: 4ndr0666
set -euo pipefail
# ================= // MAKEX //
## Description: Ensure potential script files in a directory have user executable permission.
#               Processes files ending in .sh or starting with a #!.*sh shebang,
#               excluding files within .git directories, README, .md, .txt, and only chmods
#               files that currently lack user executable permission.
## Usage:       makex.sh [DIR]   (default: current dir)
# ----------------------------------------------------------------------------

DEFAULT_DIR="."
SHEBANG_PATTERN='^#!.*\b(bash|sh|zsh|dash|ksh|ash)\b'

declare COLOR_GLOW=""
declare COLOR_BUG=""
declare COLOR_INFO=""
declare COLOR_BANNER_START=""
declare COLOR_RESET=""

if command -v tput >/dev/null 2>&1 && [ -t 1 ]; then
    COLOR_GLOW=$(tput setaf 6) # Cyan
    COLOR_BUG=$(tput setaf 1)  # Red
    COLOR_INFO=$(tput setaf 4) # Blue
    COLOR_BANNER_START=$(tput setaf 5) # Magenta
    COLOR_RESET=$(tput sgr0)
fi

GLOW() { local message="$*"; printf '%s[✔️] %s%s\n' "$COLOR_GLOW" "$message" "$COLOR_RESET"; }
BUG()  { local message="$*"; printf '%s[❌] %s%s\n' "$COLOR_BUG" "$message" "$COLOR_RESET" >&2; }
INFO() { local message="$*"; printf '%s[➡️] %s%s\n' "$COLOR_INFO" "$message" "$COLOR_RESET"; }

pause_prompt() {
    local oldstty
    GLOW "Press any key to continue..."
    if ! oldstty=$(stty -g); then BUG "Failed to save stty settings."; return 1; fi
    if ! stty cbreak -echo; then BUG "Failed to set stty cbreak -echo."; stty "$oldstty" >/dev/null 2>&1 || true; return 1; fi
    read -r -n 1 -s
    stty "$oldstty" || BUG "Failed to restore stty settings."
    printf '\n'
}

command -v clear >/dev/null 2>&1 && clear

banner="███╗   ███╗ █████╗ ██╗  ██╗███████╗██╗  ██╗
████╗ ████║██╔══██╗██║ ██╔╝██╔════╝╚██╗██╔╝
██╔████╔██║███████║█████╔╝ ██████╗   ╚███╔╝
██║╚██╔╝██║██╔══██║██╔═██╗ ██╔══╝   ██╔██╗
██║ ╚═╝ ██║██║  ██║██║  ██╗███████╗██╔╝ ██╗
╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝"

printf '%s%s%s\n\n' "$COLOR_BANNER_START" "$banner" "$COLOR_RESET"
printf "Ensuring potential script files have user executable permission...\n\n"

pause_prompt

DIR="${1:-$DEFAULT_DIR}"

if [ ! -d "$DIR" ]; then
    BUG "Error: Directory '$DIR' not found or is not a directory."
    exit 1
fi

INFO "Searching for non-executable scripts in '$DIR'..."

TEMP_FILE=$(mktemp)
trap 'rm -f "$TEMP_FILE"' EXIT

# Find all *.sh files AND any file (not in .git) with a valid shell shebang, excluding *.md, *.txt, *.README*, etc.
find "$DIR" \
    -type f \
    ! -path "*/.git/*" \
    ! -name "*.md" \
    ! -name "*.MD" \
    ! -name "*.markdown" \
    ! -name "*.txt" \
    ! -name "*.TXT" \
    ! -name "README" \
    ! -name "README.md" \
    ! -name "README.MD" \
    ! -name "*.rst" \
    \( -name "*.sh" -o -exec head -n 1 {} \; | grep -Eq "$SHEBANG_PATTERN" \) \
    ! -perm -u=x \
    -print0 > "$TEMP_FILE"

files_found_by_find=0
while IFS= read -r -d '' file; do
    files_found_by_find=$((files_found_by_find + 1))
done < "$TEMP_FILE"

if [ "$files_found_by_find" -eq 0 ]; then
    GLOW "No files found requiring executable permission."
    exit 0
fi

files_made_executable=0
files_failed=0

INFO "Processing $files_found_by_find file(s)..."

while IFS= read -r -d '' file; do
    # Recheck if it’s a valid shell script by extension or first line
    if [[ "$file" =~ \.sh$ ]] || head -n 1 "$file" | grep -Eq "$SHEBANG_PATTERN"; then
        INFO "Attempting to make executable: '$file'"
        if chmod u+x "$file"; then
            GLOW "Successfully made executable: '$file'"
            files_made_executable=$((files_made_executable + 1))
        else
            BUG "Failed to make executable: '$file'"
            files_failed=$((files_failed + 1))
        fi
    fi
done < "$TEMP_FILE"

printf '\n'
INFO "Summary:"
INFO "  Files found requiring executability: $files_found_by_find"
INFO "  Files successfully made executable: $files_made_executable"

if [ "$files_failed" -gt 0 ]; then
    BUG "  Files failed to make executable: $files_failed"
    exit 1
else
    [ "$files_found_by_find" -gt 0 ] && GLOW "  All found files successfully made executable."
    exit 0
fi
