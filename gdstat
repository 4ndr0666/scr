#!/usr/bin/env bash
# gdstat - A script to check the git status of directories recursively
# Version: 1.2.0

# Usage: gdstat /path/to/root/directory

# Default SEARCHPATH is the present working directory
SEARCHPATH="${1:-$PWD}"

# Ignore specific directories
IGNORE=('Third-Party')

# Check for Git installation
if ! command -v git &> /dev/null; then
    echo "Git is not installed. Please install Git."
    exit 1
fi

# Function to handle Git status check
check_git_status() {
    local dir=$1
    pushd "$dir" > /dev/null
    local status=$(git status -s)
    if [ -n "$status" ]; then
        echo "Dirty Repository: $dir"
        echo "$status"
    fi
    popd > /dev/null
}

# Recursively traverse directories and check Git status
find_git_directories() {
    local search_path=$1
    find "$search_path" -type d -name .git | while read -r git_dir; do
        local parent_dir=$(dirname "$git_dir")
        local ignore_flag=0
        for ignore_item in "${IGNORE[@]}"; do
            if [[ "$parent_dir" == *"$ignore_item"* ]]; then
                ignore_flag=1
                break
            fi
        done
        if [[ $ignore_flag -eq 0 ]]; then
            check_git_status "$parent_dir"
        fi
    done
}

# Main execution
echo "Running gdstat..."
find_git_directories "$SEARCHPATH"
echo "Status for all repos in this dir have been inspected."
