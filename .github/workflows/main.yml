name: Shell Script CI

on:
  push:
  schedule:
    - cron: "0 */1 * * *"
    
jobs:
  lint:
    name: Lint Shell Scripts
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install shellcheck
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck

    - name: Install shfmt
      run: |
        wget https://github.com/mvdan/sh/releases/download/v3.4.1/shfmt_v3.4.1_linux_amd64 -O shfmt
        chmod +x shfmt
        sudo mv shfmt /usr/local/bin/

    - name: Run shfmt (auto-format)
      run: |
        shfmt -l -w .
        git config --global user.email "you@example.com"
        git config --global user.name "Your Name"
        git add .
        git commit -m "Automated code formatting" || echo "No changes to commit"

    - name: Run shellcheck
      run: |
        find . -type f \( -name "*.sh" -o -name "*.bash" \) -exec shellcheck {} +

  test:
    name: Run BATS Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
    - uses: actions/checkout@master

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y bats coreutils ffmpeg

    - name: Setup Fakebin for Dry-Run Testing
      run: |
        mkdir -p fakebin
        cat > fakebin/ffmpeg <<EOF
        #!/usr/bin/env bash
        echo "[FAKE] ffmpeg \$*" >&2
        touch frame-000001.jpg frame-000002.jpg
        exit 0
        EOF

        cat > fakebin/ffprobe <<EOF
        #!/usr/bin/env bash
        if [[ "\$*" == *"pkt_dts_time"* ]]; then
          echo "0.0"
          echo "1.0"
          echo "2.0"
        else
          echo "30"
        fi
        exit 0
        EOF

        chmod +x fakebin/ffmpeg fakebin/ffprobe

    - name: Run BATS Tests
      env:
        PATH: ${{ github.workspace }}/fakebin:${{ env.PATH }}
      run: |
        touch dummy1.mp4 dummy2.mp4 dummy3.mp4
        bats *.bats

    - name: Cleanup
      run: |
        rm -rf fakebin dummy*.mp4 frame-*.jpg || true
