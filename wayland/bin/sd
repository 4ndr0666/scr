#!/bin/bash

# Enhanced 'sd' Script for Wayfire with Alacritty
# Opens a new Alacritty terminal in the same directory as the currently active window.

# Configuration
TERMINAL="alacritty"

# Function to log messages
log() {
    local message="$1"
    echo "$(date '+%Y-%m-%d %H:%M:%S') : $message" >> ~/.sd.log
}

# Function to get the active window's PID
get_active_window_pid() {
    # Requires 'xdotool' to be installed
    local window_id
    window_id=$(xdotool getactivewindow 2>/dev/null)
    if [ -z "$window_id" ]; then
        log "Failed to get active window ID."
        return 1
    fi
    xprop -id "$window_id" _NET_WM_PID | awk '{print $3}'
}

# Function to get the working directory of a process
get_process_cwd() {
    local pid="$1"
    if [ -d "/proc/$pid/cwd" ]; then
        readlink -f "/proc/$pid/cwd"
    else
        log "Cannot access /proc/$pid/cwd."
        echo "$PWD"
    fi
}

# Function to open Alacritty in the specified directory
open_alacritty() {
    local dir="$1"
    if [ -d "$dir" ]; then
        "$TERMINAL" --working-directory="$dir" &
        log "Opened Alacritty in directory: $dir"
    else
        log "Directory does not exist: $dir. Opening in current directory."
        "$TERMINAL" --working-directory="$PWD" &
    fi
}

# Main Function
main() {
    local active_pid
    active_pid=$(get_active_window_pid)
    if [ $? -ne 0 ] || [ -z "$active_pid" ]; then
        log "Unable to determine active window PID. Opening in current directory."
        open_alacritty "$PWD"
        exit 0
    fi

    # Traverse the process tree to find the shell or file manager
    local pid_list
    pid_list=$(pstree -lpATna "$active_pid" | sed -En 's/.*,([0-9]+).*/\1/p' | tac)

    local target_pid
    for pid in $pid_list; do
        local cmdline
        cmdline=$(ps -o args= -p "$pid" 2>/dev/null)
        local process_group_leader
        process_group_leader=$(ps -o comm= -p "$(ps -o pgid= -p "$pid" | tr -d ' ')")
        local cwd
        cwd=$(get_process_cwd "$pid")

        case "$cmdline" in
            'lf -server') continue ;;
            "${SHELL##*/}" | 'lf' | 'lf '*) 
                target_pid="$pid"
                break ;;
        esac

        # Ignore git processes and invalid directories
        if [ "$process_group_leader" = 'git' ] || [ ! -d "$cwd" ]; then
            continue
        fi

        if [ "$cwd" != "$HOME" ] && [ "$cwd" != '/' ]; then
            target_pid="$pid"
            break
        fi
    done

    if [ -n "$target_pid" ]; then
        local target_dir
        target_dir=$(get_process_cwd "$target_pid")
        if [ -n "$target_dir" ] && [ -d "$target_dir" ]; then
            open_alacritty "$target_dir"
            exit 0
        fi
    fi

    # Fallback to current directory
    log "Falling back to current directory."
    open_alacritty "$PWD"
}

# Execute the main function
main
