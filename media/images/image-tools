#!/usr/bin/env bash
# Author: 4ndr0666
# Version: 0.1
# ==================== // IMAGE TOOLS // ====================
## Modular image handler powered by ffmpeg

## PYTHON PORT _______________________________________
# import subprocess, sys
# import pathlib
# args = sys.argv[1:]
# if '-r' in args:
#     subprocess.run(['ffmpeg', '-i', input, '-vf', f'scale={w}:{h}', output])
# _________________________________________________

set -euo pipefail
shopt -s nullglob

usage() {
    cat <<EOF
Usage:
  image-tools.sh [-r|-cv|-c|-s] <input> [output]
  image-tools.sh -b[flags] <file1> <file2> ...

Flags:
  -r     Resize image to preset size
  -cv    Convert format
  -c     Compress (lower quality)
  -s     Strip metadata
  -b     Batch mode, e.g., -bcvs
EOF
    exit 1
}

common_sizes=("640x480" "800x600" "1024x768" "1920x1080")

resize() {
    local input="$1"
    echo "Available sizes:"
    select size in "${common_sizes[@]}"; do
        [[ -n "$size" ]] && break
    done
    local output="${input%.*}_resized.${input##*.}"
    ffmpeg -i "$input" -vf "scale=${size%%x*}:${size##*x}" "$output"
    echo "✅ Resized: $output"
}

convert_format() {
    local input="$1" output="$2"
    ffmpeg -i "$input" "$output"
    echo "✅ Converted: $output"
}

compress() {
    local input="$1" output="$2"
    ffmpeg -i "$input" -qscale:v 4 "$output"
    echo "✅ Compressed: $output"
}

strip_metadata() {
    local input="$1" output="$2"
    ffmpeg -i "$input" -map_metadata -1 -c:v copy -c:a copy "$output"
    echo "✅ Stripped: $output"
}

batch_mode() {
    local flags="${1#-b}" ; shift
    for file in "$@"; do
        for (( i=0; i<${#flags}; i++ )); do
            flag="${flags:$i:1}"
            case "$flag" in
                r) resize "$file" ;;
                v) convert_format "$file" "${file%.*}.png" ;;
                c) compress "$file" "${file%.*}_compressed.${file##*.}" ;;
                s) strip_metadata "$file" "${file%.*}_clean.${file##*.}" ;;
                *) echo "❌ Unknown flag in batch: -$flag" ;;
            esac
        done
    done
}

[[ $# -lt 2 ]] && usage

case "$1" in
    -r) shift; resize "$1" ;;
    -cv) shift; convert_format "$1" "$2" ;;
    -c) shift; compress "$1" "$2" ;;
    -s) shift; strip_metadata "$1" "$2" ;;
    -b*) batch_mode "$@" ;;
    *) usage ;;
esac
