#!/bin/sh

# Check for required commands
command -v ffmpeg >/dev/null 2>&1 || { echo "ffmpeg not installed. Aborting."; exit 1; }
command -v ffprobe >/dev/null 2>&1 || { echo "ffprobe not installed. Aborting."; exit 1; }

# Function to analyze video file
analyze_video() {
    input_file="$1"

    # Gather codec information and detect errors
    codec_info=$(ffprobe -v error -select_streams v:0 \
        -show_entries stream=codec_name,codec_type,avg_frame_rate,codec_long_name \
        -of default=noprint_wrappers=1:nokey=1 "$input_file" 2>&1)

    # Check for errors in stream
    error_logs=$(ffprobe -v error -show_entries stream=errors -of default=noprint_wrappers=1:nokey=1 "$input_file" 2>&1)

    printf "%s\n%s\n" "$codec_info" "$error_logs"
}

# Function to process video
process_video() {
    input_file="$1"
    output_file="$2"
    mode="$3"

    if [ "$mode" = "copy" ]; then
        if ! ffmpeg -i "$input_file" -c copy -fflags +genpts "$output_file"; then
            echo "Processing failed for $input_file"
            return 1
        fi
    elif [ "$mode" = "reencode" ]; then
        if ! ffmpeg -i "$input_file" -c:v libx264 -crf 17 -preset slow -c:a copy "$output_file"; then
            echo "Processing failed for $input_file"
            return 1
        fi
    else
        echo "Invalid processing mode: $mode"
        return 1
    fi

    echo "Processing complete: $output_file"
}

# Main script logic
main() {
    input_file="$1"
    output_file="${2:-output.mp4}"

    if [ -z "$input_file" ]; then
        echo "Usage: $0 <input_file> [output_file]"
        exit 1
    fi

    if [ ! -f "$input_file" ]; then
        echo "Error: Input file does not exist."
        exit 1
    fi

    echo "Analyzing video: $input_file"
    analysis_results=$(analyze_video "$input_file")
    printf "%s\n" "$analysis_results"

    # Extract codec information and check for errors from analysis results
    video_codec=$(echo "$analysis_results" | head -n 1)
    errors_detected=$(echo "$analysis_results" | tail -n +2)

    mode="copy"
    # Decide to reencode if errors are detected or codec is not H.264
    if [ -n "$errors_detected" ] || [ "$video_codec" != "h264" ]; then
        mode="reencode"
    fi

    echo "Selected processing mode: $mode"
    echo "Starting processing of $input_file"

    process_video "$input_file" "$output_file" "$mode"
}

# Run the main function with all passed arguments
main "$@"
