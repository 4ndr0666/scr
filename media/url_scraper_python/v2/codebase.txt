#!/usr/bin/env python3
"""
enumerator.py

Core logic for image enumeration and status checking.
Splits image URL processing from the main interface for clarity.

Dependencies:
    - requests (pip install requests)
    - re (built-in)
"""

import re
import requests

# -------------------------
# Global Constants & Config
# -------------------------
RESET_COLOR = "\033[0m"
LIGHT_GREEN = "\033[1;32m"
LIGHT_RED   = "\033[1;31m"
ORANGE      = "\033[0;33m"
CYAN        = "\033[0;36m"
WHITE       = "\033[0m"

MAX_LOOKAHEAD = 999
CONSECUTIVE_404_THRESHOLD = 5


def color_print(message, color=WHITE, end="\n"):
    """Prints a message in the specified color."""
    print(f"{color}{message}{RESET_COLOR}", end=end)


def get_status_code(url):
    """
    Attempts a HEAD request for minimal data.
    If HEAD is blocked or returns 405, retries with GET.
    Returns status code (int) or 0 on error.
    """
    headers = {
        "User-Agent": (
            "Mozilla/5.0 (Windows NT 10.0; Win64; x64) "
            "AppleWebKit/537.36 (KHTML, like Gecko) "
            "Chrome/58.0.3029.110 Safari/537.3"
        )
    }
    try:
        response = requests.head(url, headers=headers, timeout=5)
        if response.status_code == 405:  # HEAD blocked
            response = requests.get(url, headers=headers, stream=True, timeout=5)
        return response.status_code
    except requests.RequestException:
        return 0


def extract_numeric_portion(filename):
    """
    Extracts a numeric portion from a filename (e.g., '39.jpg').
    Returns int if found, else None.
    """
    match = re.search(r"(\d+)\.(?:jpg|jpeg|png|gif|bmp)$", filename, re.IGNORECASE)
    return int(match.group(1)) if match else None


def build_url_sequence(base_url, start_num, end_num, width=2):
    """
    Builds a list of URLs from start_num to end_num,
    replacing the numeric portion in base_url with zero-padded
    numbers of length 'width'.
    """
    urls = []
    for i in range(start_num, end_num + 1):
        new_num_str = str(i).zfill(width)
        new_url = re.sub(
            r"(\d+)\.(jpg|jpeg|png|gif|bmp)$",
            lambda m: f"{new_num_str}.{m.group(2)}",
            base_url,
            flags=re.IGNORECASE
        )
        urls.append(new_url)
    return urls


def check_urls_in_sequence(url_list):
    """
    Checks the status codes for a list of URLs, printing color-coded results.
    Returns (success_count, redirect_count, error_count).
    """
    total = success = redirected = errors = 0
    for url in url_list:
        sc = get_status_code(url)
        total += 1
        if 200 <= sc <= 299:
            color_print(f"{url} [HTTP {sc}]", LIGHT_GREEN)
            success += 1
        elif 300 <= sc <= 399:
            color_print(f"{url} [HTTP {sc}]", ORANGE)
            redirected += 1
        else:
            color_print(f"{url} [HTTP {sc}]", LIGHT_RED)
            errors += 1

    color_print(
        f"\n[Summary] {success} OK | {redirected} Redirected | {errors} Broken (out of {total} total)",
        WHITE
    )
    return success, redirected, errors


def auto_enumerate_images(base_url):
    """
    Auto-detect a numeric portion in the filename, then expand outward
    until encountering CONSECUTIVE_404_THRESHOLD failures in each direction.
    Builds the final list of discovered images, checks statuses.
    """
    filename = base_url.split('/')[-1]
    numeric_value = extract_numeric_portion(filename)
    if numeric_value is None:
        color_print("No numeric portion found in URL filename; cannot enumerate.", LIGHT_RED)
        return []

    match_width = re.search(r"(\d+)\.(?:jpg|jpeg|png|gif|bmp)$", filename, re.IGNORECASE)
    width = len(match_width.group(1)) if match_width else 2

    found_nums = {numeric_value}
    consecutive_fails = 0

    # Scan backwards
    current = numeric_value - 1
    while current > 0 and consecutive_fails < CONSECUTIVE_404_THRESHOLD:
        test_url = re.sub(
            r"(\d+)\.(jpg|jpeg|png|gif|bmp)$",
            lambda m: f"{str(current).zfill(width)}.{m.group(2)}",
            base_url,
            flags=re.IGNORECASE
        )
        if 200 <= get_status_code(test_url) <= 299:
            found_nums.add(current)
            consecutive_fails = 0
        else:
            consecutive_fails += 1
        current -= 1

    # Scan forwards
    consecutive_fails = 0
    current = numeric_value + 1
    while current <= MAX_LOOKAHEAD and consecutive_fails < CONSECUTIVE_404_THRESHOLD:
        test_url = re.sub(
            r"(\d+)\.(jpg|jpeg|png|gif|bmp)$",
            lambda m: f"{str(current).zfill(width)}.{m.group(2)}",
            base_url,
            flags=re.IGNORECASE
        )
        if 200 <= get_status_code(test_url) <= 299:
            found_nums.add(current)
            consecutive_fails = 0
        else:
            consecutive_fails += 1
        current += 1

    min_found = min(found_nums)
    max_found = max(found_nums)
    url_list = build_url_sequence(base_url, min_found, max_found, width=width)
    color_print(f"Enumerated {len(url_list)} images from {min_found} to {max_found}:", CYAN)
    check_urls_in_sequence(url_list)
    return url_list
#!/usr/bin/env python3
"""
integration.py

Provides supporting functions:
  1. open_in_browser: Open enumerated URLs in new browser tabs.
  2. download_with_aria2: Download enumerated URLs using aria2.
  3. store_urls: Store enumerated URLs in a text file (idempotent).

Dependencies:
    - enumerator.py (relative import)
    - webbrowser (built-in)
    - subprocess, os, tempfile, time
"""

import os
import subprocess
import webbrowser
import tempfile
import time


def open_in_browser(url_list):
    """Open each URL in a new browser tab with a slight delay."""
    for url in url_list:
        try:
            webbrowser.open_new_tab(url)
            time.sleep(0.3)
        except Exception as e:
            print(f"Error opening URL {url}: {e}")


def download_with_aria2(url_list, out_dir):
    """
    Leverage aria2 to download enumerated URLs.
    Writes URLs to a temporary file, calls aria2c with standard arguments only
    (no --disable-rpc), preventing unrecognized-option errors.
    """
    if not url_list:
        print("No URLs to download.")
        return

    if not os.path.isdir(out_dir):
        os.makedirs(out_dir, exist_ok=True)

    tmpfile = os.path.join(tempfile.gettempdir(), f"aria2_input_{int(time.time())}.txt")
    try:
        with open(tmpfile, 'w', encoding='utf-8') as f:
            for url in url_list:
                f.write(url + "\n")

        cmd = ["aria2c", "-d", out_dir, "-i", tmpfile]
        print(f"Running aria2c. Download directory: {out_dir}")
        print(f"Command: {' '.join(cmd)}")
        subprocess.run(cmd, check=True)
    except subprocess.CalledProcessError as err:
        print(f"Error downloading with aria2: {err}")
    finally:
        if os.path.isfile(tmpfile):
            os.remove(tmpfile)


def store_urls(url_list, out_file):
    """
    Stores URLs in a file using an idempotent approach.
    Returns the number of newly appended URLs.
    """
    if not url_list:
        print("No URLs to store.")
        return 0

    existing = set()
    if os.path.isfile(out_file):
        with open(out_file, 'r', encoding='utf-8') as f:
            for line in f:
                existing.add(line.strip())

    appended_count = 0
    with open(out_file, 'a', encoding='utf-8') as f:
        for url in url_list:
            if url not in existing:
                f.write(url + "\n")
                appended_count += 1
    return appended_count
#!/usr/bin/env python3
"""
main.py

Main entry point for the image enumeration script.
Handles user interaction, command-line arguments, and dispatches tasks
to enumerator.py + integration.py.

Features:
  - Interactive menu
  - Browser opening
  - Downloading via aria2
  - Storing enumerated URLs to a file

Dependencies:
    - enumerator.py
    - integration.py
    - argparse (built-in)
    - Python 3.x, requests
    - aria2 (if using the download feature)
"""

import sys
import argparse
import enumerator
import integration


def show_help():
    """Display usage instructions for this script."""
    print("Usage: main.py [options]\n")
    print("Options:")
    print("  -h, --help                      Show this help message and exit.")
    print("  -u <URL>                        Enumerate images starting at the specified image URL.")
    print("  -m, --menu                      Launch interactive menu.")
    print("  --open-browser                  Open enumerated images in new browser tabs.")
    print("  --download-aria2 <DOWNLOAD_DIR> Download enumerated images via aria2 to the specified directory.")
    print("  --store <FILENAME>              Store enumerated images to a local text file (idempotent).")
    print("")
    print("Examples:")
    print("  main.py -u https://example.com/39.jpg --open-browser")
    print("  main.py -u https://example.com/39.jpg --download-aria2 /path/to/downloads")
    print("  main.py -u https://example.com/39.jpg --store found_urls.txt")
    print("  main.py -m")


def menu_mode():
    """Interactive menu for enumerating images and taking subsequent actions."""
    while True:
        enumerator.color_print("\n--- Image Enumeration Menu ---", enumerator.CYAN)
        print("1) Enumerate images from a URL")
        print("2) Show help/usage")
        print("3) Quit")
        choice = input("Enter choice: ").strip()
        if choice == "1":
            url = input("Enter an image URL (with numeric portion, e.g., 39.jpg): ").strip()
            if url:
                enumerated_list = enumerator.auto_enumerate_images(url)
                submenu(enumerated_list)
        elif choice == "2":
            show_help()
        elif choice == "3":
            print("Goodbye.")
            sys.exit(0)
        else:
            enumerator.color_print("Unrecognized choice. Please try again.", enumerator.LIGHT_RED)


def submenu(enumerated_list):
    """Presents additional options after enumerating images."""
    while True:
        enumerator.color_print("\n--- Post-Enumeration Options ---", enumerator.CYAN)
        print("1) Open enumerated images in browser tabs")
        print("2) Download enumerated images via aria2")
        print("3) Store enumerated images to a text file")
        print("4) Return to main menu")
        choice = input("Enter choice: ").strip()
        if choice == "1":
            integration.open_in_browser(enumerated_list)
            enumerator.color_print("Opened enumerated images in browser tabs.", enumerator.LIGHT_GREEN)
        elif choice == "2":
            out_dir = input("Enter download directory: ").strip()
            integration.download_with_aria2(enumerated_list, out_dir)
        elif choice == "3":
            out_file = input("Enter output file name: ").strip()
            appended_count = integration.store_urls(enumerated_list, out_file)
            enumerator.color_print(f"Stored {appended_count} new URLs to file: {out_file}", enumerator.LIGHT_GREEN)
        elif choice == "4":
            break
        else:
            enumerator.color_print("Unrecognized choice. Please try again.", enumerator.LIGHT_RED)


def main():
    """Parses command-line arguments and performs requested actions."""
    parser = argparse.ArgumentParser(add_help=False)
    parser.add_argument("-h", "--help", action="store_true", help="Show help message.")
    parser.add_argument("-m", "--menu", action="store_true", help="Launch interactive menu.")
    parser.add_argument("-u", metavar="URL", type=str, help="Enumerate images from the given image URL.")
    parser.add_argument("--open-browser", action="store_true", help="Open enumerated images in browser tabs.")
    parser.add_argument("--download-aria2", metavar="DOWNLOAD_DIR", type=str, help="Download enumerated images using aria2.")
    parser.add_argument("--store", metavar="FILENAME", type=str, help="Store enumerated images in a file (idempotent).")

    args = parser.parse_args()
    if len(sys.argv) == 1:
        menu_mode()
        return
    if args.help:
        show_help()
        sys.exit(0)
    if args.menu:
        menu_mode()
        return
    if not args.u:
        enumerator.color_print("Error: No URL provided. Use -u <URL> or -m for menu mode.", enumerator.LIGHT_RED)
        show_help()
        sys.exit(1)

    enumerated_list = enumerator.auto_enumerate_images(args.u)
    if args.open_browser:
        integration.open_in_browser(enumerated_list)
    if args.download_aria2:
        integration.download_with_aria2(enumerated_list, args.download_aria2)
    if args.store:
        appended_count = integration.store_urls(enumerated_list, args.store)
        enumerator.color_print(f"Stored {appended_count} new URLs to file: {args.store}", enumerator.LIGHT_GREEN)


if __name__ == "__main__":
    main()
  File: [1menumerator.py[0m
  [38;2;117;113;94m#!/usr/bin/env python3[0m
  [38;2;230;219;116m"""[0m
  [38;2;230;219;116menumerator.py[0m
  
  [38;2;230;219;116mCore logic for image enumeration and status checking.[0m
  [38;2;230;219;116mSplit from the main script for clarity and maintainability.[0m
  
  [38;2;230;219;116mDependencies:[0m
  [38;2;230;219;116m    - requests (pip install requests)[0m
  [38;2;230;219;116m    - re (built-in)[0m
  [38;2;230;219;116m"""[0m
  
  [38;2;249;38;114mimport[0m[38;2;248;248;242m re[0m
  [38;2;249;38;114mimport[0m[38;2;248;248;242m requests[0m
  
  [38;2;117;113;94m# -------------------------[0m
  [38;2;117;113;94m# Global Constants & Config[0m
  [38;2;117;113;94m# -------------------------[0m
  [38;2;248;248;242mRESET_COLOR [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\033[0m[0m[38;2;230;219;116m"[0m
  [38;2;248;248;242mLIGHT_GREEN [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\033[1;32m[0m[38;2;230;219;116m"[0m
  [38;2;248;248;242mLIGHT_RED   [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\033[1;31m[0m[38;2;230;219;116m"[0m
  [38;2;248;248;242mORANGE      [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\033[0;33m[0m[38;2;230;219;116m"[0m
  [38;2;248;248;242mCYAN        [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\033[0;36m[0m[38;2;230;219;116m"[0m
  [38;2;248;248;242mWHITE       [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\033[0m[0m[38;2;230;219;116m"[0m
  
  [38;2;117;113;94m# Maximum lookahead[0m
  [38;2;248;248;242mMAX_LOOKAHEAD [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m999[0m
  [38;2;117;113;94m# Consecutive 404 threshold[0m
  [38;2;248;248;242mCONSECUTIVE_404_THRESHOLD [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m5[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m color_print(message, color[0m[38;2;249;38;114m=[0m[38;2;248;248;242mWHITE, end[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116m\n[0m[38;2;230;219;116m"[0m[38;2;248;248;242m):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Prints a message in the specified color.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m{color}{message}{RESET_COLOR}[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, end[0m[38;2;249;38;114m=[0m[38;2;248;248;242mend)[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m get_status_code(url):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Attempts a HEAD request for minimal data. If HEAD is blocked or returns 40[0m
  [38;2;230;219;116m5,[0m
  [38;2;230;219;116m    retries with a GET request. Returns the final status code (int) or 0 on er[0m
  [38;2;230;219;116mror.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    headers [0m[38;2;249;38;114m=[0m[38;2;248;248;242m {[0m
  [38;2;248;248;242m        [0m[38;2;230;219;116m"[0m[38;2;230;219;116mUser-Agent[0m[38;2;230;219;116m"[0m[38;2;248;248;242m: ([0m
  [38;2;248;248;242m            [0m[38;2;230;219;116m"[0m[38;2;230;219;116mMozilla/5.0 (Windows NT 10.0; Win64; x64) [0m[38;2;230;219;116m"[0m
  [38;2;248;248;242m            [0m[38;2;230;219;116m"[0m[38;2;230;219;116mAppleWebKit/537.36 (KHTML, like Gecko) [0m[38;2;230;219;116m"[0m
  [38;2;248;248;242m            [0m[38;2;230;219;116m"[0m[38;2;230;219;116mChrome/58.0.3029.110 Safari/537.3[0m[38;2;230;219;116m"[0m
  [38;2;248;248;242m        )[0m
  [38;2;248;248;242m    }[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mtry[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m        response [0m[38;2;249;38;114m=[0m[38;2;248;248;242m requests.head(url, headers[0m[38;2;249;38;114m=[0m[38;2;248;248;242mheaders, timeout[0m[38;2;249;38;114m=[0m[38;2;190;132;255m5[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mif[0m[38;2;248;248;242m response.status_code [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;190;132;255m405[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            [0m[38;2;117;113;94m# Some servers block HEAD -> try GET[0m
  [38;2;248;248;242m            response [0m[38;2;249;38;114m=[0m[38;2;248;248;242m requests.get(url, headers[0m[38;2;249;38;114m=[0m[38;2;248;248;242mheaders, stream[0m[38;2;249;38;114m=[0m[38;2;249;38;114mTrue[0m[38;2;248;248;242m, timeout[0m
  [38;2;249;38;114m=[0m[38;2;190;132;255m5[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m response.status_code[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mexcept[0m[38;2;248;248;242m requests.RequestException:[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m extract_numeric_portion(filename):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Extracts the numeric portion from a filename like '39.jpg' using regex.[0m
  [38;2;230;219;116m    Returns an integer if found, else None.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    match [0m[38;2;249;38;114m=[0m[38;2;248;248;242m re.search(r[0m[38;2;230;219;116m"[0m[38;2;230;219;116m(\d+)\.(?:jpg|jpeg|png|gif|bmp)$[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, filename, re.IGNORE[0m
  [38;2;248;248;242mCASE)[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m match:[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m int(match.group([0m[38;2;190;132;255m1[0m[38;2;248;248;242m))[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m [0m[38;2;249;38;114mNone[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m build_url_sequence(base_url, start_num, end_num, width[0m[38;2;249;38;114m=[0m[38;2;190;132;255m2[0m[38;2;248;248;242m):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Build a list of URLs from start_num to end_num,[0m
  [38;2;230;219;116m    replacing the numeric portion in base_url with zero-padded[0m
  [38;2;230;219;116m    numbers of length 'width'.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    urls [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [][0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mfor[0m[38;2;248;248;242m i in range(start_num, end_num [0m[38;2;249;38;114m+[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m[38;2;248;248;242m):[0m
  [38;2;248;248;242m        new_num_str [0m[38;2;249;38;114m=[0m[38;2;248;248;242m str(i).zfill(width)[0m
  [38;2;248;248;242m        [0m[38;2;117;113;94m# Regex sub to replace trailing digits in base_url[0m
  [38;2;248;248;242m        new_url [0m[38;2;249;38;114m=[0m[38;2;248;248;242m re.sub([0m
  [38;2;248;248;242m            r[0m[38;2;230;219;116m"[0m[38;2;230;219;116m(\d+)\.(jpg|jpeg|png|gif|bmp)$[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m            f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m{new_num_str}.[0m[38;2;190;132;255m\\2[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m            base_url,[0m
  [38;2;248;248;242m            flags[0m[38;2;249;38;114m=[0m[38;2;248;248;242mre.IGNORECASE[0m
  [38;2;248;248;242m        )[0m
  [38;2;248;248;242m        urls.append(new_url)[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m urls[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m check_urls_in_sequence(url_list):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Checks the status codes for a list of URLs, printing color-coded results.[0m
  [38;2;230;219;116m    Returns (success_count, redirect_count, error_count).[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    total [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m    success [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m    redirected [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m    errors [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  
  [38;2;248;248;242m    [0m[38;2;249;38;114mfor[0m[38;2;248;248;242m url in url_list:[0m
  [38;2;248;248;242m        sc [0m[38;2;249;38;114m=[0m[38;2;248;248;242m get_status_code(url)[0m
  [38;2;248;248;242m        total [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mif[0m[38;2;248;248;242m [0m[38;2;190;132;255m200[0m[38;2;248;248;242m [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m sc [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m [0m[38;2;190;132;255m299[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            color_print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m{url} [HTTP {sc}][0m[38;2;230;219;116m"[0m[38;2;248;248;242m, LIGHT_GREEN)[0m
  [38;2;248;248;242m            success [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melif[0m[38;2;248;248;242m [0m[38;2;190;132;255m300[0m[38;2;248;248;242m [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m sc [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m [0m[38;2;190;132;255m399[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            color_print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m{url} [HTTP {sc}][0m[38;2;230;219;116m"[0m[38;2;248;248;242m, ORANGE)[0m
  [38;2;248;248;242m            redirected [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melse[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            color_print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m{url} [HTTP {sc}][0m[38;2;230;219;116m"[0m[38;2;248;248;242m, LIGHT_RED)[0m
  [38;2;248;248;242m            errors [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  
  [38;2;248;248;242m    color_print([0m
  [38;2;248;248;242m        f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m\n[Summary] {success} OK | {redirected} Redirected | {errors} Broken[0m
  [38;2;230;219;116m [0m[38;2;230;219;116m"[0m
  [38;2;248;248;242m        f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m(out of {total} total)[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m        WHITE[0m
  [38;2;248;248;242m    )[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m success, redirected, errors[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m auto_enumerate_images(base_url):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Auto-detect a numeric portion in the filename, then expand outwards until[0m
  [38;2;230;219;116m    encountering CONSECUTIVE_404_THRESHOLD errors in each direction.[0m
  [38;2;230;219;116m    Finally, build the list of discovered images and check their statuses.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    filename [0m[38;2;249;38;114m=[0m[38;2;248;248;242m base_url.split([0m[38;2;230;219;116m'[0m[38;2;230;219;116m/[0m[38;2;230;219;116m'[0m[38;2;248;248;242m)[[0m[38;2;249;38;114m-[0m[38;2;190;132;255m1[0m[38;2;248;248;242m][0m
  [38;2;248;248;242m    numeric_value [0m[38;2;249;38;114m=[0m[38;2;248;248;242m extract_numeric_portion(filename)[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m numeric_value is [0m[38;2;249;38;114mNone[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m        color_print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mNo numeric portion found in URL filename; cannot enumerat[0m
  [38;2;230;219;116me.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, LIGHT_RED)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m [][0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Determine zero-padding width based on the discovered portion[0m
  [38;2;248;248;242m    match_width [0m[38;2;249;38;114m=[0m[38;2;248;248;242m re.search(r[0m[38;2;230;219;116m"[0m[38;2;230;219;116m(\d+)\.(?:jpg|jpeg|png|gif|bmp)$[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, filename, re.[0m
  [38;2;248;248;242mIGNORECASE)[0m
  [38;2;248;248;242m    width [0m[38;2;249;38;114m=[0m[38;2;248;248;242m len(match_width.group([0m[38;2;190;132;255m1[0m[38;2;248;248;242m)) [0m[38;2;249;38;114mif[0m[38;2;248;248;242m match_width [0m[38;2;249;38;114melse[0m[38;2;248;248;242m [0m[38;2;190;132;255m2[0m
  
  [38;2;248;248;242m    found_nums [0m[38;2;249;38;114m=[0m[38;2;248;248;242m set()[0m
  [38;2;248;248;242m    found_nums.add(numeric_value)[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Scan backwards[0m
  [38;2;248;248;242m    consecutive_fails [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m    current [0m[38;2;249;38;114m=[0m[38;2;248;248;242m numeric_value [0m[38;2;249;38;114m-[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mwhile[0m[38;2;248;248;242m current [0m[38;2;249;38;114m>[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m[38;2;248;248;242m and consecutive_fails [0m[38;2;249;38;114m<[0m[38;2;248;248;242m CONSECUTIVE_404_THRESHOLD:[0m
  [38;2;248;248;242m        test_url [0m[38;2;249;38;114m=[0m[38;2;248;248;242m re.sub([0m
  [38;2;248;248;242m            r[0m[38;2;230;219;116m"[0m[38;2;230;219;116m(\d+)\.(jpg|jpeg|png|gif|bmp)$[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m            f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m{str(current).zfill(width)}.[0m[38;2;190;132;255m\\2[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m            base_url,[0m
  [38;2;248;248;242m            flags[0m[38;2;249;38;114m=[0m[38;2;248;248;242mre.IGNORECASE[0m
  [38;2;248;248;242m        )[0m
  [38;2;248;248;242m        sc [0m[38;2;249;38;114m=[0m[38;2;248;248;242m get_status_code(test_url)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mif[0m[38;2;248;248;242m [0m[38;2;190;132;255m200[0m[38;2;248;248;242m [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m sc [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m [0m[38;2;190;132;255m299[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            found_nums.add(current)[0m
  [38;2;248;248;242m            consecutive_fails [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melse[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            consecutive_fails [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m        current [0m[38;2;249;38;114m-=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Scan forwards[0m
  [38;2;248;248;242m    consecutive_fails [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m    current [0m[38;2;249;38;114m=[0m[38;2;248;248;242m numeric_value [0m[38;2;249;38;114m+[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mwhile[0m[38;2;248;248;242m current [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m MAX_LOOKAHEAD and consecutive_fails [0m[38;2;249;38;114m<[0m[38;2;248;248;242m CONSECUTIVE_404_THR[0m
  [38;2;248;248;242mESHOLD:[0m
  [38;2;248;248;242m        test_url [0m[38;2;249;38;114m=[0m[38;2;248;248;242m re.sub([0m
  [38;2;248;248;242m            r[0m[38;2;230;219;116m"[0m[38;2;230;219;116m(\d+)\.(jpg|jpeg|png|gif|bmp)$[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m            f[0m[38;2;230;219;116m"[0m[38;2;230;219;116m{str(current).zfill(width)}.[0m[38;2;190;132;255m\\2[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m            base_url,[0m
  [38;2;248;248;242m            flags[0m[38;2;249;38;114m=[0m[38;2;248;248;242mre.IGNORECASE[0m
  [38;2;248;248;242m        )[0m
  [38;2;248;248;242m        sc [0m[38;2;249;38;114m=[0m[38;2;248;248;242m get_status_code(test_url)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mif[0m[38;2;248;248;242m [0m[38;2;190;132;255m200[0m[38;2;248;248;242m [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m sc [0m[38;2;249;38;114m<=[0m[38;2;248;248;242m [0m[38;2;190;132;255m299[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            found_nums.add(current)[0m
  [38;2;248;248;242m            consecutive_fails [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melse[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            consecutive_fails [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m        current [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Build final sequence[0m
  [38;2;248;248;242m    min_found [0m[38;2;249;38;114m=[0m[38;2;248;248;242m min(found_nums)[0m
  [38;2;248;248;242m    max_found [0m[38;2;249;38;114m=[0m[38;2;248;248;242m max(found_nums)[0m
  [38;2;248;248;242m    url_list [0m[38;2;249;38;114m=[0m[38;2;248;248;242m build_url_sequence(base_url, min_found, max_found, width[0m[38;2;249;38;114m=[0m[38;2;248;248;242mwidth)[0m
  
  [38;2;248;248;242m    color_print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116mEnumerated {len(url_list)} images from {min_found} to {max_f[0m
  [38;2;230;219;116mound}:[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, CYAN)[0m
  [38;2;248;248;242m    check_urls_in_sequence(url_list)[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m url_list[0m
[38;2;131;148;150m────────────────────────────────────────────────────────────────────────────────[0m
  File: [1mintegration.py[0m
  [38;2;117;113;94m#!/usr/bin/env python3[0m
  [38;2;230;219;116m"""[0m
  [38;2;230;219;116mintegration.py[0m
  
  [38;2;230;219;116mProvides supporting functions:[0m
  [38;2;230;219;116m  1. open_in_browser: open enumerated URLs in a web browser tab-by-tab[0m
  [38;2;230;219;116m  2. download_with_aria2: download enumerated URLs using aria2[0m
  [38;2;230;219;116m  3. store_urls: store enumerated URLs in a text file with idempotent approach[0m
  
  [38;2;230;219;116mDependencies:[0m
  [38;2;230;219;116m    - enumerator.py (relative import)[0m
  [38;2;230;219;116m    - webbrowser (built-in)[0m
  [38;2;230;219;116m    - subprocess, os, tempfile, time[0m
  [38;2;230;219;116m"""[0m
  
  [38;2;249;38;114mimport[0m[38;2;248;248;242m os[0m
  [38;2;249;38;114mimport[0m[38;2;248;248;242m subprocess[0m
  [38;2;249;38;114mimport[0m[38;2;248;248;242m webbrowser[0m
  [38;2;249;38;114mimport[0m[38;2;248;248;242m tempfile[0m
  [38;2;249;38;114mimport[0m[38;2;248;248;242m time[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m open_in_browser(url_list):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Open each URL in a new browser tab.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mfor[0m[38;2;248;248;242m url in url_list:[0m
  [38;2;248;248;242m        webbrowser.open_new_tab(url)[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m download_with_aria2(url_list, out_dir):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Leverage aria2 to download enumerated URLs.[0m
  [38;2;230;219;116m    Writes URLs to a temporary file, calls aria2c with -i <file>.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m not url_list:[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mNo URLs to download.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Create out_dir if not exist[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m not os.path.isdir(out_dir):[0m
  [38;2;248;248;242m        os.makedirs(out_dir, exist_ok[0m[38;2;249;38;114m=[0m[38;2;249;38;114mTrue[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Create a temporary text file containing the URLs[0m
  [38;2;248;248;242m    tmpfile [0m[38;2;249;38;114m=[0m[38;2;248;248;242m os.path.join(tempfile.gettempdir(), f[0m[38;2;230;219;116m"[0m[38;2;230;219;116maria2_input_{int(time.time[0m
  [38;2;230;219;116m())}.txt[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mtry[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mwith[0m[38;2;248;248;242m open(tmpfile, [0m[38;2;230;219;116m'[0m[38;2;230;219;116mw[0m[38;2;230;219;116m'[0m[38;2;248;248;242m, encoding[0m[38;2;249;38;114m=[0m[38;2;230;219;116m'[0m[38;2;230;219;116mutf-8[0m[38;2;230;219;116m'[0m[38;2;248;248;242m) [0m[38;2;249;38;114mas[0m[38;2;248;248;242m f:[0m
  [38;2;248;248;242m            [0m[38;2;249;38;114mfor[0m[38;2;248;248;242m url in url_list:[0m
  [38;2;248;248;242m                f.write(url [0m[38;2;249;38;114m+[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\n[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m        [0m[38;2;117;113;94m# Run aria2[0m
  [38;2;248;248;242m        cmd [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [[0m[38;2;230;219;116m"[0m[38;2;230;219;116maria2c[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, [0m[38;2;230;219;116m"[0m[38;2;230;219;116m-d[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, out_dir, [0m[38;2;230;219;116m"[0m[38;2;230;219;116m-i[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, tmpfile][0m
  [38;2;248;248;242m        print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116mRunning aria2c. Download directory: {out_dir}[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116mCommand: {' '.join(cmd)}[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        subprocess.run(cmd, check[0m[38;2;249;38;114m=[0m[38;2;249;38;114mTrue[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m    [0m[38;2;249;38;114mexcept[0m[38;2;248;248;242m subprocess.CalledProcessError [0m[38;2;249;38;114mas[0m[38;2;248;248;242m err:[0m
  [38;2;248;248;242m        print(f[0m[38;2;230;219;116m"[0m[38;2;230;219;116mError downloading with aria2: {err}[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m    [0m[38;2;249;38;114mfinally[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m        [0m[38;2;117;113;94m# Cleanup temp file[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mif[0m[38;2;248;248;242m os.path.isfile(tmpfile):[0m
  [38;2;248;248;242m            os.remove(tmpfile)[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m store_urls(url_list, out_file):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Stores URLs in a file with an idempotent approach:[0m
  [38;2;230;219;116m      - If the file already exists, do not duplicate URLs that are already pre[0m
  [38;2;230;219;116msent.[0m
  [38;2;230;219;116m      - Otherwise, create the file and write all URLs.[0m
  
  [38;2;230;219;116m    Returns the number of newly appended URLs.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m not url_list:[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mNo URLs to store.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  
  [38;2;248;248;242m    existing [0m[38;2;249;38;114m=[0m[38;2;248;248;242m set()[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m os.path.isfile(out_file):[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mwith[0m[38;2;248;248;242m open(out_file, [0m[38;2;230;219;116m'[0m[38;2;230;219;116mr[0m[38;2;230;219;116m'[0m[38;2;248;248;242m, encoding[0m[38;2;249;38;114m=[0m[38;2;230;219;116m'[0m[38;2;230;219;116mutf-8[0m[38;2;230;219;116m'[0m[38;2;248;248;242m) [0m[38;2;249;38;114mas[0m[38;2;248;248;242m f:[0m
  [38;2;248;248;242m            [0m[38;2;249;38;114mfor[0m[38;2;248;248;242m line in f:[0m
  [38;2;248;248;242m                existing.add(line.strip())[0m
  
  [38;2;248;248;242m    appended_count [0m[38;2;249;38;114m=[0m[38;2;248;248;242m [0m[38;2;190;132;255m0[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mwith[0m[38;2;248;248;242m open(out_file, [0m[38;2;230;219;116m'[0m[38;2;230;219;116ma[0m[38;2;230;219;116m'[0m[38;2;248;248;242m, encoding[0m[38;2;249;38;114m=[0m[38;2;230;219;116m'[0m[38;2;230;219;116mutf-8[0m[38;2;230;219;116m'[0m[38;2;248;248;242m) [0m[38;2;249;38;114mas[0m[38;2;248;248;242m f:[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mfor[0m[38;2;248;248;242m url in url_list:[0m
  [38;2;248;248;242m            [0m[38;2;249;38;114mif[0m[38;2;248;248;242m url not in existing:[0m
  [38;2;248;248;242m                f.write(url [0m[38;2;249;38;114m+[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m\n[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m                appended_count [0m[38;2;249;38;114m+=[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mreturn[0m[38;2;248;248;242m appended_count[0m
[38;2;131;148;150m────────────────────────────────────────────────────────────────────────────────[0m
  File: [1mmain.py[0m
  [38;2;117;113;94m#!/usr/bin/env python3[0m
  [38;2;230;219;116m"""[0m
  [38;2;230;219;116mmain.py[0m
  
  [38;2;230;219;116mMain entry point for the image enumeration script. [0m
  [38;2;230;219;116mHandles user interaction, command-line arguments, [0m
  [38;2;230;219;116mand calls enumerator.py + integration.py for extended capabilities:[0m
  
  [38;2;230;219;116m  - Browser opening[0m
  [38;2;230;219;116m  - Downloading with aria2[0m
  [38;2;230;219;116m  - Storing enumerated URLs in a local file[0m
  
  [38;2;230;219;116mDependencies:[0m
  [38;2;230;219;116m    - enumerator.py[0m
  [38;2;230;219;116m    - integration.py[0m
  [38;2;230;219;116m    - argparse (built-in)[0m
  [38;2;230;219;116m    - Python 3.x[0m
  [38;2;230;219;116m    - requests (pip install requests)[0m
  [38;2;230;219;116m    - aria2 (installed on system, if using the download feature)[0m
  [38;2;230;219;116m"""[0m
  
  [38;2;249;38;114mimport[0m[38;2;248;248;242m sys[0m
  [38;2;249;38;114mimport[0m[38;2;248;248;242m argparse[0m
  
  [38;2;249;38;114mimport[0m[38;2;248;248;242m enumerator[0m
  [38;2;249;38;114mimport[0m[38;2;248;248;242m integration[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m show_help():[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Display usage instructions for this script.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mUsage: main.py [options]\n[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mOptions:[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  -h, --help                    Show this help message and exit.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  -u <URL>                      Enumerate images starting at the sp[0m
  [38;2;230;219;116mecified image URL.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  -m, --menu                    Launch interactive menu.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  --open-browser                Open enumerated images in new brows[0m
  [38;2;230;219;116mer tabs.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  --download-aria2 <DOWNLOAD_DIR>  Download enumerated images using[0m
  [38;2;230;219;116m aria2.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  --store <FILENAME>            Store enumerated images to a local [0m
  [38;2;230;219;116mtext file (idempotent).[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mExamples:[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  main.py -u https://example.com/39.jpg --open-browser[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  main.py -u https://example.com/39.jpg --download-aria2 /path/to/d[0m
  [38;2;230;219;116mownloads[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  main.py -u https://example.com/39.jpg --store found_urls.txt[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m  main.py -m[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m menu_mode():[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Interactive menu mode, allowing the user to choose an action.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mwhile[0m[38;2;248;248;242m [0m[38;2;249;38;114mTrue[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m        enumerator.color_print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m\n--- Image Enumeration Menu ---[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, enumerator.[0m
  [38;2;248;248;242mCYAN)[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m1) Enumerate images from a URL[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m2) Show help/usage[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m3) Quit[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m        choice [0m[38;2;249;38;114m=[0m[38;2;248;248;242m input([0m[38;2;230;219;116m"[0m[38;2;230;219;116mEnter choice: [0m[38;2;230;219;116m"[0m[38;2;248;248;242m).strip()[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mif[0m[38;2;248;248;242m choice [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m1[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            url [0m[38;2;249;38;114m=[0m[38;2;248;248;242m input([0m[38;2;230;219;116m"[0m[38;2;230;219;116mEnter an image URL (with numeric portion, e.g., 39.jp[0m
  [38;2;230;219;116mg): [0m[38;2;230;219;116m"[0m[38;2;248;248;242m).strip()[0m
  [38;2;248;248;242m            [0m[38;2;249;38;114mif[0m[38;2;248;248;242m url:[0m
  [38;2;248;248;242m                [0m[38;2;117;113;94m# Perform enumeration[0m
  [38;2;248;248;242m                enumerated_list [0m[38;2;249;38;114m=[0m[38;2;248;248;242m enumerator.auto_enumerate_images(url)[0m
  [38;2;248;248;242m                [0m[38;2;117;113;94m# Submenu for next steps[0m
  [38;2;248;248;242m                submenu(enumerated_list)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melif[0m[38;2;248;248;242m choice [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m2[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            show_help()[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melif[0m[38;2;248;248;242m choice [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m3[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mGoodbye.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m            sys.exit([0m[38;2;190;132;255m0[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melse[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            enumerator.color_print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mUnrecognized choice. Please try again.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, e[0m
  [38;2;248;248;242mnumerator.LIGHT_RED)[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m submenu(enumerated_list):[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Presents additional options after enumerating the images (opening in brows[0m
  [38;2;230;219;116mer,[0m
  [38;2;230;219;116m    downloading via aria2, storing to a file, etc.).[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mwhile[0m[38;2;248;248;242m [0m[38;2;249;38;114mTrue[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m        enumerator.color_print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m\n--- Post-Enumeration Options ---[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, enumerato[0m
  [38;2;248;248;242mr.CYAN)[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m1) Open enumerated images in browser tabs[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m2) Download enumerated images via aria2[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m3) Store enumerated images to a text file[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m        print([0m[38;2;230;219;116m"[0m[38;2;230;219;116m4) Return to main menu[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m        choice [0m[38;2;249;38;114m=[0m[38;2;248;248;242m input([0m[38;2;230;219;116m"[0m[38;2;230;219;116mEnter choice: [0m[38;2;230;219;116m"[0m[38;2;248;248;242m).strip()[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mif[0m[38;2;248;248;242m choice [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m1[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            integration.open_in_browser(enumerated_list)[0m
  [38;2;248;248;242m            enumerator.color_print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mOpened enumerated images in browser tabs.[0m[38;2;230;219;116m"[0m
  [38;2;248;248;242m, enumerator.LIGHT_GREEN)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melif[0m[38;2;248;248;242m choice [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m2[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            out_dir [0m[38;2;249;38;114m=[0m[38;2;248;248;242m input([0m[38;2;230;219;116m"[0m[38;2;230;219;116mEnter download directory: [0m[38;2;230;219;116m"[0m[38;2;248;248;242m).strip()[0m
  [38;2;248;248;242m            integration.download_with_aria2(enumerated_list, out_dir)[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melif[0m[38;2;248;248;242m choice [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m3[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            out_file [0m[38;2;249;38;114m=[0m[38;2;248;248;242m input([0m[38;2;230;219;116m"[0m[38;2;230;219;116mEnter output file name: [0m[38;2;230;219;116m"[0m[38;2;248;248;242m).strip()[0m
  [38;2;248;248;242m            appended_count [0m[38;2;249;38;114m=[0m[38;2;248;248;242m integration.store_urls(enumerated_list, out_file)[0m
  [38;2;248;248;242m            enumerator.color_print([0m
  [38;2;248;248;242m                f[0m[38;2;230;219;116m"[0m[38;2;230;219;116mStored {appended_count} new URLs to file: {out_file}[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m                enumerator.LIGHT_GREEN[0m
  [38;2;248;248;242m            )[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melif[0m[38;2;248;248;242m choice [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m4[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            [0m[38;2;117;113;94m# Return to main menu[0m
  [38;2;248;248;242m            [0m[38;2;249;38;114mbreak[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114melse[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m            enumerator.color_print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mUnrecognized choice. Please try again.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, e[0m
  [38;2;248;248;242mnumerator.LIGHT_RED)[0m
  
  
  [38;2;249;38;114mdef[0m[38;2;248;248;242m main():[0m
  [38;2;248;248;242m    [0m[38;2;230;219;116m"""[0m
  [38;2;230;219;116m    Parses command-line arguments and dispatches to the correct function.[0m
  [38;2;230;219;116m    [0m[38;2;230;219;116m"""[0m
  [38;2;248;248;242m    parser [0m[38;2;249;38;114m=[0m[38;2;248;248;242m argparse.ArgumentParser(add_help[0m[38;2;249;38;114m=[0m[38;2;249;38;114mFalse[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    parser.add_argument([0m[38;2;230;219;116m"[0m[38;2;230;219;116m-h[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, [0m[38;2;230;219;116m"[0m[38;2;230;219;116m--help[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, action[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mstore_true[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, help[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mShow help m[0m
  [38;2;230;219;116message.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    parser.add_argument([0m[38;2;230;219;116m"[0m[38;2;230;219;116m-m[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, [0m[38;2;230;219;116m"[0m[38;2;230;219;116m--menu[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, action[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mstore_true[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, help[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mLaunch inte[0m
  [38;2;230;219;116mractive menu.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    parser.add_argument([0m[38;2;230;219;116m"[0m[38;2;230;219;116m-u[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, metavar[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mURL[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, type[0m[38;2;249;38;114m=[0m[38;2;248;248;242mstr, help[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mEnumerate images [0m
  [38;2;230;219;116mfrom the given image URL.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    parser.add_argument([0m[38;2;230;219;116m"[0m[38;2;230;219;116m--open-browser[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, action[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mstore_true[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, help[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mOpen enum[0m
  [38;2;230;219;116merated images in new browser tabs.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    parser.add_argument([0m[38;2;230;219;116m"[0m[38;2;230;219;116m--download-aria2[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, metavar[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mDOWNLOAD_DIR[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, type[0m[38;2;249;38;114m=[0m[38;2;248;248;242mstr,[0m
  [38;2;248;248;242m                        help[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mDownload enumerated images using aria2 to the sp[0m
  [38;2;230;219;116mecified directory.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  [38;2;248;248;242m    parser.add_argument([0m[38;2;230;219;116m"[0m[38;2;230;219;116m--store[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, metavar[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mFILENAME[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, type[0m[38;2;249;38;114m=[0m[38;2;248;248;242mstr,[0m
  [38;2;248;248;242m                        help[0m[38;2;249;38;114m=[0m[38;2;230;219;116m"[0m[38;2;230;219;116mStore enumerated images in a local text file (id[0m
  [38;2;230;219;116mempotent).[0m[38;2;230;219;116m"[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m    args [0m[38;2;249;38;114m=[0m[38;2;248;248;242m parser.parse_args()[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# If no arguments, launch the menu[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m len(sys.argv) [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;190;132;255m1[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m        menu_mode()[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Handle help[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m args.help:[0m
  [38;2;248;248;242m        show_help()[0m
  [38;2;248;248;242m        sys.exit([0m[38;2;190;132;255m0[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Handle menu[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m args.menu:[0m
  [38;2;248;248;242m        menu_mode()[0m
  [38;2;248;248;242m        [0m[38;2;249;38;114mreturn[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Must have a URL to enumerate if not in menu mode[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m not args.u:[0m
  [38;2;248;248;242m        enumerator.color_print([0m[38;2;230;219;116m"[0m[38;2;230;219;116mError: No URL provided. Use -u <URL> or -m for[0m
  [38;2;230;219;116m the menu.[0m[38;2;230;219;116m"[0m[38;2;248;248;242m, enumerator.LIGHT_RED)[0m
  [38;2;248;248;242m        show_help()[0m
  [38;2;248;248;242m        sys.exit([0m[38;2;190;132;255m1[0m[38;2;248;248;242m)[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# Perform enumeration[0m
  [38;2;248;248;242m    enumerated_list [0m[38;2;249;38;114m=[0m[38;2;248;248;242m enumerator.auto_enumerate_images(args.u)[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# If user wants to open in browser[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m args.open_browser:[0m
  [38;2;248;248;242m        integration.open_in_browser(enumerated_list)[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# If user wants to download via aria2[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m args.download_aria2:[0m
  [38;2;248;248;242m        integration.download_with_aria2(enumerated_list, args.download_aria2)[0m
  
  [38;2;248;248;242m    [0m[38;2;117;113;94m# If user wants to store enumerated URLs to a file[0m
  [38;2;248;248;242m    [0m[38;2;249;38;114mif[0m[38;2;248;248;242m args.store:[0m
  [38;2;248;248;242m        appended_count [0m[38;2;249;38;114m=[0m[38;2;248;248;242m integration.store_urls(enumerated_list, args.store)[0m
  [38;2;248;248;242m        enumerator.color_print([0m
  [38;2;248;248;242m            f[0m[38;2;230;219;116m"[0m[38;2;230;219;116mStored {appended_count} new URLs to file: {args.store}[0m[38;2;230;219;116m"[0m[38;2;248;248;242m,[0m
  [38;2;248;248;242m            enumerator.LIGHT_GREEN[0m
  [38;2;248;248;242m        )[0m
  
  
  [38;2;249;38;114mif[0m[38;2;248;248;242m __name__ [0m[38;2;249;38;114m==[0m[38;2;248;248;242m [0m[38;2;230;219;116m"[0m[38;2;230;219;116m__main__[0m[38;2;230;219;116m"[0m[38;2;248;248;242m:[0m
  [38;2;248;248;242m    main()[0m
