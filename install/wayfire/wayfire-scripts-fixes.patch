diff --git a/install/wayfire/scripts/asroot b/install/wayfire/scripts/asroot
old mode 100755
new mode 100644
index 3b79c2f559318b839fa04290495c8dbab85d3c64..dad166a7333b589609606a032eb66ee590701d14
--- a/install/wayfire/scripts/asroot
+++ b/install/wayfire/scripts/asroot
@@ -1,10 +1,10 @@
 #!/usr/bin/env bash
 
 # wayfire directory
 DIR="$HOME/.config/wayfire"
 
 # rofi sudo askpass helper
 export SUDO_ASKPASS="$DIR"/scripts/rofi_askpass
 
 # execute the application
-sudo -E -A $1
+sudo -E -A "$1"
diff --git a/install/wayfire/scripts/brightness b/install/wayfire/scripts/brightness
old mode 100755
new mode 100644
index 27782bf1a301900856238e66d7c458eea90e95ac..648c76f4db88ef61539af28e49db65de9e5af30c
--- a/install/wayfire/scripts/brightness
+++ b/install/wayfire/scripts/brightness
@@ -1,36 +1,36 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 ##
 ## Script To Manage Brightness For Archcraft (in Wayland).
 
 iDIR="$HOME/.config/wayfire/mako/icons"
 
 # Get brightness
 get_backlight() {
-	LIGHT=$(printf "%.0f\n" `light -G`)
+	LIGHT=$(printf "%.0f\n" "$(light -G)")
 	echo "${LIGHT}%"
 }
 
 # Get icons
 get_icon() {
 	backlight="$(get_backlight)"
 	current="${backlight%%%}"
 	if [[ ("$current" -ge "0") && ("$current" -le "20") ]]; then
 		icon="$iDIR"/brightness-20.png
 	elif [[ ("$current" -ge "20") && ("$current" -le "40") ]]; then
 		icon="$iDIR"/brightness-40.png
 	elif [[ ("$current" -ge "40") && ("$current" -le "60") ]]; then
 		icon="$iDIR"/brightness-60.png
 	elif [[ ("$current" -ge "60") && ("$current" -le "80") ]]; then
 		icon="$iDIR"/brightness-80.png
 	elif [[ ("$current" -ge "80") && ("$current" -le "100") ]]; then
 		icon="$iDIR"/brightness-100.png
 	fi
 }
 
 # Notify
 notify_user() {
 	notify-send -h string:x-canonical-private-synchronous:sys-notify-backlight -u low -i "$icon" "Brightness : $(get_backlight)"
 }
 
diff --git a/install/wayfire/scripts/colorpicker b/install/wayfire/scripts/colorpicker
old mode 100755
new mode 100644
index 1a4783f566da85167ba334a7856a843338ade93c..11774a1b0c0e8c2a462673b974f2b8005b0d146b
--- a/install/wayfire/scripts/colorpicker
+++ b/install/wayfire/scripts/colorpicker
@@ -1,22 +1,22 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 ##
 ## Simple Script To Pick Color Quickly.
 
-color=$(grim -g "`slurp -b 00000000 -p`" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n1 | cut -d' ' -f4)
+color=$(grim -g "$(slurp -b 00000000 -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n1 | cut -d' ' -f4)
 image=/tmp/${color}.png
 
 main() {
 	if [[ "$color" ]]; then
 		# copy color code to clipboard
-		echo $color | tr -d "\n" | wl-copy
+		echo "$color" | tr -d "\n" | wl-copy
 		# generate preview
-		convert -size 48x48 xc:"$color" ${image}
+		convert -size 48x48 xc:"$color" "${image}"
 		# notify about it
-		notify-send -h string:x-canonical-private-synchronous:sys-notify-picker -u low -i ${image} "$color, copied to clipboard."
+		notify-send -h string:x-canonical-private-synchronous:sys-notify-picker -u low -i "${image}" "$color, copied to clipboard."
 	fi
 }
 
 # Run the script
 main
diff --git a/install/wayfire/scripts/notifications b/install/wayfire/scripts/notifications
old mode 100755
new mode 100644
index 171f38b33fb20de62367b0b40eadd1af2e9a17d5..34950af4624957b82d1ec4eed8b4ae05641a8087
--- a/install/wayfire/scripts/notifications
+++ b/install/wayfire/scripts/notifications
@@ -1,11 +1,11 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 ##
 ## launch mako with alt config
 
 CONFIG="$HOME/.config/wayfire/mako/config"
 
-if [[ ! `pidof mako` ]]; then
-	mako --config ${CONFIG}
+if [[ ! $(pidof mako) ]]; then
+	mako --config "${CONFIG}"
 fi
diff --git a/install/wayfire/scripts/rofi_askpass b/install/wayfire/scripts/rofi_askpass
old mode 100755
new mode 100644
index 57a57ef10ba83df5dbf0416509d356e46b926891..79208981f47e27082d99a770f53e3a1832f99a3d
--- a/install/wayfire/scripts/rofi_askpass
+++ b/install/wayfire/scripts/rofi_askpass
@@ -1,12 +1,12 @@
 #!/usr/bin/env bash
 
 # Import Current Theme
 DIR="$HOME/.config/wayfire"
 RASI="$DIR/rofi/askpass.rasi"
 
 # Rofi text dialog to get password
 rofi -dmenu \
-     -password \
-     -i \
-     -p "Root" \
-     -theme ${RASI}
+	-password \
+	-i \
+	-p "Root" \
+	-theme "${RASI}"
diff --git a/install/wayfire/scripts/rofi_launcher b/install/wayfire/scripts/rofi_launcher
old mode 100755
new mode 100644
index 7f677aeaf1c522ef518bd480fc2317e38aa975a5..ecd2d6b496eba78a85648d26d1d60f7de3c9afd1
--- a/install/wayfire/scripts/rofi_launcher
+++ b/install/wayfire/scripts/rofi_launcher
@@ -1,12 +1,12 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 
 # Import Current Theme
 DIR="$HOME/.config/wayfire"
 RASI="$DIR/rofi/launcher.rasi"
 
 # Run
 rofi \
-    -show drun \
-	-theme ${RASI}
+	-show drun \
+	-theme "${RASI}"
diff --git a/install/wayfire/scripts/rofi_powermenu b/install/wayfire/scripts/rofi_powermenu
old mode 100755
new mode 100644
index db646e511a66cf73a5856805aad73eb5105c6315..e2861036a2efd91ba3674058c6b1aea6d7e06b27
--- a/install/wayfire/scripts/rofi_powermenu
+++ b/install/wayfire/scripts/rofi_powermenu
@@ -1,117 +1,117 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 
 # Import Current Theme
 DIR="$HOME/.config/wayfire"
 RASI="$DIR/rofi/powermenu.rasi"
 CNFR="$DIR/rofi/confirm.rasi"
 
 # Theme Elements
-prompt="`hostname` (`echo $DESKTOP_SESSION`)"
-mesg="Uptime : `uptime -p | sed -e 's/up //g'`"
+prompt="$(hostname) (${DESKTOP_SESSION})"
+mesg="Uptime : $(uptime -p | sed -e 's/up //g')"
 
 # Options
-layout=`cat ${RASI} | grep 'USE_ICON' | cut -d'=' -f2`
+layout=$(grep 'USE_ICON' "${RASI}" | cut -d'=' -f2)
 if [[ "$layout" == 'NO' ]]; then
 	option_1=" Lock"
 	option_2=" Logout"
 	option_3=" Suspend"
 	option_4=" Hibernate"
 	option_5=" Reboot"
 	option_6=" Shutdown"
 else
 	option_1=""
 	option_2=""
 	option_3=""
 	option_4=""
 	option_5=""
 	option_6=""
 fi
-cnflayout=`cat ${CNFR} | grep 'USE_ICON' | cut -d'=' -f2`
+cnflayout=$(grep 'USE_ICON' "${CNFR}" | cut -d'=' -f2)
 if [[ "$cnflayout" == 'NO' ]]; then
 	yes=' Yes'
 	no=' No'
 else
 	yes=''
 	no=''
 fi
 
 # Rofi CMD
 rofi_cmd() {
 	rofi -dmenu \
 		-p "$prompt" \
 		-mesg "$mesg" \
 		-markup-rows \
-		-theme ${RASI}
+		-theme "${RASI}"
 }
 
 # Pass variables to rofi dmenu
 run_rofi() {
 	echo -e "$option_1\n$option_2\n$option_3\n$option_4\n$option_5\n$option_6" | rofi_cmd
 }
 
 # Confirmation CMD
 confirm_cmd() {
 	rofi -dmenu \
 		-p 'Confirmation' \
 		-mesg 'Are you Sure?' \
 		-selected-row 1 \
 		-no-click-to-exit \
-		-theme ${CNFR}
+		-theme "${CNFR}"
 }
 
 # Ask for confirmation
 confirm_exit() {
 	echo -e "$yes\n$no" | confirm_cmd
 }
 
 # Confirm and execute
-confirm_run () {	
+confirm_run() {
 	selected="$(confirm_exit)"
 	if [[ "$selected" == "$yes" ]]; then
-        ${1} && ${2} && ${3} && ${4}
-    else
-        exit
-    fi	
+		${1} && ${2} && ${3} && ${4}
+	else
+		exit
+	fi
 }
 
 # Execute Command
 run_cmd() {
 	if [[ "$1" == '--opt1' ]]; then
 		"$DIR"/scripts/lockscreen
 	elif [[ "$1" == '--opt2' ]]; then
 		confirm_run 'killall wayfire'
 	elif [[ "$1" == '--opt3' ]]; then
 		confirm_run 'mpc -q pause' 'pulsemixer --mute' "$DIR/scripts/lockscreen" 'systemctl suspend'
 	elif [[ "$1" == '--opt4' ]]; then
 		confirm_run 'systemctl hibernate'
 	elif [[ "$1" == '--opt5' ]]; then
 		confirm_run 'systemctl reboot'
 	elif [[ "$1" == '--opt6' ]]; then
 		confirm_run 'systemctl poweroff'
 	fi
 }
 
 # Actions
 chosen="$(run_rofi)"
-case ${chosen} in
-    $option_1)
-		run_cmd --opt1
-        ;;
-    $option_2)
-		run_cmd --opt2
-        ;;
-    $option_3)
-		run_cmd --opt3
-        ;;
-    $option_4)
-		run_cmd --opt4
-        ;;
-    $option_5)
-		run_cmd --opt5
-        ;;
-    $option_6)
-		run_cmd --opt6
-        ;;
+case "${chosen}" in
+"${option_1}")
+	run_cmd --opt1
+	;;
+"${option_2}")
+	run_cmd --opt2
+	;;
+"${option_3}")
+	run_cmd --opt3
+	;;
+"${option_4}")
+	run_cmd --opt4
+	;;
+"${option_5}")
+	run_cmd --opt5
+	;;
+"${option_6}")
+	run_cmd --opt6
+	;;
 esac
diff --git a/install/wayfire/scripts/rofi_screenshot b/install/wayfire/scripts/rofi_screenshot
old mode 100755
new mode 100644
index b023804cb5def6ac164e4dc816840575a3e9a5f0..d3f31b6951a32d172ebaa9fcc9ed64ae20852611
--- a/install/wayfire/scripts/rofi_screenshot
+++ b/install/wayfire/scripts/rofi_screenshot
@@ -1,142 +1,142 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 
 # Get Colors
 DIR="$HOME/.config/wayfire"
-background="`cat $DIR/rofi/shared/colors.rasi | grep 'background:' | cut -d':' -f2 | tr -d ' '\;`"
-accent="`cat $DIR/rofi/shared/colors.rasi | grep 'selected:' | cut -d':' -f2 | tr -d ' '\;`"
+background="$(grep 'background:' "$DIR"/rofi/shared/colors.rasi | cut -d':' -f2 | tr -d ' ')"
+accent="$(grep 'selected:' "$DIR"/rofi/shared/colors.rasi | cut -d':' -f2 | tr -d ' ')"
 
 # Import Current Theme
 DIR="$HOME/.config/wayfire"
 RASI="$DIR/rofi/screenshot.rasi"
 
 # Theme Elements
 prompt='Screenshot'
-mesg="Directory :: `xdg-user-dir PICTURES`/Screenshots"
+mesg="Directory :: $(xdg-user-dir PICTURES)/Screenshots"
 
 # Options
-layout=`cat ${RASI} | grep 'USE_ICON' | cut -d'=' -f2`
+layout=$(grep 'USE_ICON' "${RASI}" | cut -d'=' -f2)
 if [[ "$layout" == 'NO' ]]; then
 	option_1=" Capture Desktop"
 	option_2=" Capture Area"
 	option_3=" Capture Window"
 	option_4=" Capture in 5s"
 	option_5=" Capture in 10s"
 else
 	option_1=""
 	option_2=""
 	option_3=""
 	option_4=""
 	option_5=""
 fi
 
 # Rofi CMD
 rofi_cmd() {
 	rofi -dmenu \
 		-p "$prompt" \
 		-mesg "$mesg" \
 		-markup-rows \
-		-theme ${RASI}
+		-theme "${RASI}"
 }
 
 # Pass variables to rofi dmenu
 run_rofi() {
 	echo -e "$option_1\n$option_2\n$option_4\n$option_5" | rofi_cmd
 }
 
 # Screenshot
-time=`date +%Y-%m-%d-%H-%M-%S`
-geometry=`swaymsg -pt get_outputs | grep 'Current mode:' | cut -d':' -f2 | cut -d'@' -f1 | tr -d ' '`
-dir="`xdg-user-dir PICTURES`/Screenshots"
+time=$(date +%Y-%m-%d-%H-%M-%S)
+geometry=$(swaymsg -pt get_outputs | grep 'Current mode:' | cut -d':' -f2 | cut -d'@' -f1 | tr -d ' ')
+dir="$(xdg-user-dir PICTURES)/Screenshots"
 file="Screenshot_${time}_${geometry}.png"
 
 # Directory
 if [[ ! -d "$dir" ]]; then
 	mkdir -p "$dir"
 fi
 
 # notify and view screenshot
 iDIR="$HOME/.config/wayfire/mako/icons"
 notify_view() {
 	notify_cmd_shot="notify-send -h string:x-canonical-private-synchronous:sys-notify-shot -u low -i ${iDIR}/picture.png"
 	${notify_cmd_shot} "Copied to clipboard."
 	paplay /usr/share/sounds/freedesktop/stereo/screen-capture.oga &>/dev/null &
-	viewnior ${dir}/"$file"
+	viewnior "${dir}"/"$file"
 	if [[ -e "$dir/$file" ]]; then
 		${notify_cmd_shot} "Screenshot Saved."
 	else
 		${notify_cmd_shot} "Screenshot Deleted."
 	fi
 }
 
 # countdown
-countdown () {
-	for sec in `seq $1 -1 1`; do
+countdown() {
+	for sec in $(seq "$1" -1 1); do
 		notify-send -h string:x-canonical-private-synchronous:sys-notify-count -t 1000 -i "$iDIR"/timer.png "Taking shot in : $sec"
 		sleep 1
 	done
 }
 
 # take shots
-shotnow () {
-	cd ${dir} && sleep 0.5 && grim - | tee "$file" | wl-copy
+shotnow() {
+	cd "${dir}" && sleep 0.5 && grim - | tee "$file" | wl-copy
 	notify_view
 }
 
-shot5 () {
+shot5() {
 	countdown '5'
-	sleep 1 && cd ${dir} && grim - | tee "$file" | wl-copy
+	sleep 1 && cd "${dir}" && grim - | tee "$file" | wl-copy
 	notify_view
 }
 
-shot10 () {
+shot10() {
 	countdown '10'
-	sleep 1 && cd ${dir} && grim - | tee "$file" | wl-copy
+	sleep 1 && cd "${dir}" && grim - | tee "$file" | wl-copy
 	notify_view
 }
 
-shotwin () {
-	cd ${dir} && grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | tee "$file" | wl-copy
+shotwin() {
+	cd "${dir}" && grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | tee "$file" | wl-copy
 	notify_view
 }
 
-shotarea () {
-	cd ${dir} && grim -g "$(slurp -b ${background:1}CC -c ${accent:1}ff -s ${accent:1}0D -w 2 && sleep 0.3)" - | tee "$file" | wl-copy
+shotarea() {
+	cd "${dir}" && grim -g "$(slurp -b "${background:1}"CC -c "${accent:1}"ff -s "${accent:1}"0D -w 2 && sleep 0.3)" - | tee "$file" | wl-copy
 	notify_view
 }
 
 # Execute Command
 run_cmd() {
 	if [[ "$1" == '--opt1' ]]; then
 		shotnow
 	elif [[ "$1" == '--opt2' ]]; then
 		shotarea
 	elif [[ "$1" == '--opt3' ]]; then
 		shotwin
 	elif [[ "$1" == '--opt4' ]]; then
 		shot5
 	elif [[ "$1" == '--opt5' ]]; then
 		shot10
 	fi
 }
 
 # Actions
 chosen="$(run_rofi)"
-case ${chosen} in
-    $option_1)
-		run_cmd --opt1
-        ;;
-    $option_2)
-		run_cmd --opt2
-        ;;
-    $option_3)
-		run_cmd --opt3
-        ;;
-    $option_4)
-		run_cmd --opt4
-        ;;
-    $option_5)
-		run_cmd --opt5
-        ;;
+case "${chosen}" in
+"${option_1}")
+	run_cmd --opt1
+	;;
+"${option_2}")
+	run_cmd --opt2
+	;;
+"${option_3}")
+	run_cmd --opt3
+	;;
+"${option_4}")
+	run_cmd --opt4
+	;;
+"${option_5}")
+	run_cmd --opt5
+	;;
 esac
diff --git a/install/wayfire/scripts/statusbar b/install/wayfire/scripts/statusbar
old mode 100755
new mode 100644
index 49473ff19e46b2df4e00a0b9e30e998ec7dc8bc4..91c605e6deade5523216815ff829a41e66e6370f
--- a/install/wayfire/scripts/statusbar
+++ b/install/wayfire/scripts/statusbar
@@ -1,8 +1,8 @@
 #!/usr/bin/env bash
 
 CONFIG="$HOME/.config/wayfire/waybar/config"
 STYLE="$HOME/.config/wayfire/waybar/style.css"
 
-if [[ ! `pidof waybar` ]]; then
-	waybar --bar main-bar --log-level error --config ${CONFIG} --style ${STYLE}
+if [[ ! $(pidof waybar) ]]; then
+	waybar --bar main-bar --log-level error --config "${CONFIG}" --style "${STYLE}"
 fi
diff --git a/install/wayfire/scripts/toggle_waybar.sh b/install/wayfire/scripts/toggle_waybar.sh
index 058411067f044ba6ed15d02e06f1665261ba2343..bf0de4ed4f0997ea8807bcc395adc866cd6ba168 100644
--- a/install/wayfire/scripts/toggle_waybar.sh
+++ b/install/wayfire/scripts/toggle_waybar.sh
@@ -1,50 +1,41 @@
 #!/bin/bash
 # Author: 4ndr0666
 # ===================== // TOGGLE-WAYBAR v2 //
 
 ## Constants
 CONFIG="$HOME/.config/wayfire/waybar/config"
 STYLE="$HOME/.config/wayfire/waybar/style.css"
 notify-send "Toggle-Waybar Executed"
 
-## If exists
-file_exists() {
-	 if [ -e "$1" ]; then
-	     return 0
-	 else 
-	     return 1
-	 fi
-}
-
 ## Kill running processes
 _ps=(waybar rofi)
 for _prs in "${_ps[@]}"; do
-    if pidof "${_prs}" >/dev/null; then
-        pkill "${_prs}"
-    fi
+	if pidof "${_prs}" >/dev/null; then
+		pkill "${_prs}"
+	fi
 done
 
 ## Some process to kill
 for pid in $(pidof waybar rofi); do
-    kill -SIGUSR1 "$pid"
+	kill -SIGUSR1 "$pid"
 done
 
 ## Restart waybar
 sleep 1
-waybar --bar main-bar --config ${CONFIG} --style ${STYLE} &
+waybar --bar main-bar --config "${CONFIG}" --style "${STYLE}" &
 
 exit 0
 # ===================== // V1 //
 # restart_waybar() {
 #     pkill waybar
 #     sleep 1
 #     waybar --bar main-bar --config ${CONFIG} --style ${STYLE} &
 # }
 #
 # if ! pidof waybar >/dev/null; then
 #     waybar --bar main-bar --config ${CONFIG} --style ${STYLE} &
 #     exit 0
 # fi
 #
 # restart_waybar
 # -----------------------------------------------------
diff --git a/install/wayfire/scripts/volume b/install/wayfire/scripts/volume
old mode 100755
new mode 100644
index 2b7a242409c5cb162fb034f747ffa0649ae2cb3b..80dff40280b1f94b5f055e1c93da8b3ed61a1f4b
--- a/install/wayfire/scripts/volume
+++ b/install/wayfire/scripts/volume
@@ -1,82 +1,82 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 ##
 ## Script To Manage Speaker Volume For Archcraft (in Wayland).
 
 iDIR="$HOME/.config/wayfire/mako/icons"
 notify_cmd='notify-send -h string:x-canonical-private-synchronous:sys-notify-volume -u low'
 
 # Get Volume
 get_volume() {
-	echo "`pulsemixer --get-volume | cut -d' ' -f1`"
+	pulsemixer --get-volume | cut -d' ' -f1
 }
 
 # Get icons
 get_icon() {
 	current="$(get_volume)"
 	if [[ "$current" -eq "0" ]]; then
 		icon="$iDIR/volume-mute.png"
 	elif [[ ("$current" -ge "0") && ("$current" -le "30") ]]; then
 		icon="$iDIR/volume-low.png"
 	elif [[ ("$current" -ge "30") && ("$current" -le "60") ]]; then
 		icon="$iDIR/volume-mid.png"
 	elif [[ ("$current" -ge "60") && ("$current" -le "100") ]]; then
 		icon="$iDIR/volume-high.png"
 	fi
 }
 
 # Notify
 notify_user() {
 	${notify_cmd} -i "$icon" "Volume : $(get_volume)%"
 }
 
 # Increase Volume
 inc_volume() {
-	[[ `pulsemixer --get-mute` == 1 ]] && pulsemixer --unmute
+	[[ $(pulsemixer --get-mute) == 1 ]] && pulsemixer --unmute
 	pulsemixer --max-volume 100 --change-volume +5 && get_icon && notify_user
 }
 
 # Decrease Volume
 dec_volume() {
-	[[ `pulsemixer --get-mute` == 1 ]] && pulsemixer --unmute
+	[[ $(pulsemixer --get-mute) == 1 ]] && pulsemixer --unmute
 	pulsemixer --max-volume 100 --change-volume -5 && get_icon && notify_user
 }
 
 # Toggle Mute
 toggle_mute() {
-	if [[ `pulsemixer --get-mute` == 0 ]]; then
+	if [[ $(pulsemixer --get-mute) == 0 ]]; then
 		pulsemixer --toggle-mute && ${notify_cmd} -i "$iDIR/volume-mute.png" "Mute"
 	else
 		pulsemixer --toggle-mute && get_icon && ${notify_cmd} -i "$icon" "Unmute"
 	fi
 }
 
 # Toggle Mic
 toggle_mic() {
-	ID="`pulsemixer --list-sources | grep 'Default' | cut -d',' -f1 | cut -d' ' -f3`"
-	if [[ `pulsemixer --id $ID --get-mute` == 0 ]]; then
-		pulsemixer --id ${ID} --toggle-mute && ${notify_cmd} -i "$iDIR/microphone-mute.png" "Microphone Switched OFF"
+	ID="$(pulsemixer --list-sources | grep 'Default' | cut -d',' -f1 | cut -d' ' -f3)"
+	if [[ $(pulsemixer --id "$ID" --get-mute) == 0 ]]; then
+		pulsemixer --id "$ID" --toggle-mute && ${notify_cmd} -i "$iDIR/microphone-mute.png" "Microphone Switched OFF"
 	else
-		pulsemixer --id ${ID} --toggle-mute && ${notify_cmd} -i "$iDIR/microphone.png" "Microphone Switched ON"
+		pulsemixer --id "$ID" --toggle-mute && ${notify_cmd} -i "$iDIR/microphone.png" "Microphone Switched ON"
 	fi
 }
 
 # Execute accordingly
-if [[ -x `which pulsemixer` ]]; then
+if command -v pulsemixer >/dev/null; then
 	if [[ "$1" == "--get" ]]; then
 		get_volume
 	elif [[ "$1" == "--inc" ]]; then
 		inc_volume
 	elif [[ "$1" == "--dec" ]]; then
 		dec_volume
 	elif [[ "$1" == "--toggle" ]]; then
 		toggle_mute
 	elif [[ "$1" == "--toggle-mic" ]]; then
 		toggle_mic
 	else
-		echo $(get_volume)%
+		printf '%s%%\n' "$(get_volume)"
 	fi
 else
 	${notify_cmd} "'pulsemixer' is not installed."
 fi
diff --git a/install/wayfire/scripts/wofi_menu b/install/wayfire/scripts/wofi_menu
old mode 100755
new mode 100644
index ab2699f7f18dbe150beec2f7e50ff3205b130540..b1fefc168a77770e23d77c95ce8e3cab83c0e782
--- a/install/wayfire/scripts/wofi_menu
+++ b/install/wayfire/scripts/wofi_menu
@@ -1,14 +1,14 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 ##
 ## launch wofi with alt config
 
 CONFIG="$HOME/.config/wayfire/wofi/config"
 STYLE="$HOME/.config/wayfire/wofi/style.css"
 
-if [[ ! `pidof wofi` ]]; then
-	wofi --show drun --prompt 'Search Applications' --conf ${CONFIG} --style ${STYLE}
+if [[ ! $(pidof wofi) ]]; then
+	wofi --show drun --prompt 'Search Applications' --conf "${CONFIG}" --style "${STYLE}"
 else
 	pkill wofi
 fi
diff --git a/install/wayfire/scripts/wofi_powermenu b/install/wayfire/scripts/wofi_powermenu
old mode 100755
new mode 100644
index d45a3fb7b1b4c8df5575e890f0bde9f90c1045fc..ca24ed4c02815a1959570ff3674834ff3ec637cd
--- a/install/wayfire/scripts/wofi_powermenu
+++ b/install/wayfire/scripts/wofi_powermenu
@@ -1,84 +1,80 @@
 #!/usr/bin/env bash
 
 ## Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>
 ##
 ## Wofi Powermenu
 
 ## Files
 CONFIG="$HOME/.config/wayfire/wofi/config"
 STYLE="$HOME/.config/wayfire/wofi/style.css"
 
 ## Wofi Command
 wofi_command="wofi --show dmenu \
-			--conf ${CONFIG} --style ${STYLE} \
+                        --conf ${CONFIG} --style ${STYLE} \
 			--width=300 --height=205 \
 			--cache-file=/dev/null \
 			--hide-scroll --no-actions \
 			--define=matching=fuzzy"
 
 uptime=$(uptime -p | sed -e 's/up //g')
 
 ## Entries
 shutdown=" Shutdown"
 reboot=" Restart"
 lock=" Lock"
 suspend=" Sleep"
 logout=" Logout"
 
 # Ask for confirmation
-cdialog () {
+cdialog() {
 	yad --title='Confirm?' --borders=15 --center --fixed --undecorated --button=Yes:0 --button=No:1 --text="Are you sure?" --text-align=center
 }
 
 # Variable passed to rofi
-open_menu () {
+open_menu() {
 	options="$lock\n$suspend\n$logout\n$reboot\n$shutdown"
 
 	chosen="$(echo -e "$options" | $wofi_command --prompt "UP - $uptime")"
 	case $chosen in
-		$shutdown)
-			cdialog
-			if [[ "$?" == 0 ]]; then
-				systemctl poweroff
-			else
-				exit
-			fi
-			;;
-		$reboot)
-			cdialog
-			if [[ "$?" == 0 ]]; then
-				systemctl reboot
-			else
-				exit
-			fi
-			;;
-		$lock)
+	"$shutdown")
+		if cdialog; then
+			systemctl poweroff
+		else
+			exit
+		fi
+		;;
+	"$reboot")
+		if cdialog; then
+			systemctl reboot
+		else
+			exit
+		fi
+		;;
+	"$lock")
+		~/.config/wayfire/scripts/lockscreen
+		;;
+	"$suspend")
+		if cdialog; then
+			mpc -q pause
+			pulsemixer --mute
 			~/.config/wayfire/scripts/lockscreen
-			;;
-		$suspend)
-			cdialog
-			if [[ "$?" == 0 ]]; then
-				mpc -q pause
-				pulsemixer --mute
-				~/.config/wayfire/scripts/lockscreen
-				systemctl suspend
-			else
-				exit
-			fi
-			;;
-		$logout)
-			cdialog
-			if [[ "$?" == 0 ]]; then
-				killall wayfire
-			else
-				exit
-			fi
-			;;
+			systemctl suspend
+		else
+			exit
+		fi
+		;;
+	"$logout")
+		if cdialog; then
+			killall wayfire
+		else
+			exit
+		fi
+		;;
 	esac
 }
 
-if [[ ! `pidof wofi` ]]; then
+if [[ ! $(pidof wofi) ]]; then
 	open_menu
 else
 	pkill wofi
 fi
